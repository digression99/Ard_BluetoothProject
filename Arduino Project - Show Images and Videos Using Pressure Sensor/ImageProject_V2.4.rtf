{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset129 AppleGothic;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11760\viewh9000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 import processing.serial.*;\
\
final static int WAIT_TIME = 95;\
final static int SENSITIVITY = 1;\
\
\
Serial bt1, bt2;\
//Serial myPort;\
String[] path;\
Img[] imgArr;\
int hashNum;\
int imgCnt;\
\
\
\
char ch; // to receive data\
\
int[] imgNumArr;\
\
int nowImg;\
boolean isUp;\
boolean isDown;\
\
int time;\
boolean isTimeChecked;\
\
int time2;\
boolean isTimeChecked2;\
\
class Img\
\{\
  PImage img;\
  String path;\
  boolean isShown;\
  Img(PImage img, String p, boolean isShown)\
  \{\
    this.img = img;\
    this.path = p;\
    this.isShown = isShown;\
  \}\
  void showImage(int num)\
  \{\
    image(this.img, 0, 0, displayWidth, displayHeight);\
    //println("showing : " + nowImg);\
  \}\
\};\
\
void setup()\
\{\
  size(displayWidth, displayHeight);\
  println(Serial.list());\
\
  serialInit();\
  dataInit();\
  pathInit();\
  numArrInit();\
  imgInit();\
\
  background(0);\
\}\
\
void draw()\
\{\
  //imgCnt++;\
  if (ch >= SENSITIVITY)\
  \{\
    isTimeChecked2 = false;\
    if (!isTimeChecked)\
    \{\
      time = 0;\
      isTimeChecked = true;\
	time2 = 0;\
    \}\
    time++;\
    if (time > WAIT_TIME)\
    \{\
      if (!isUp)\
      \{\
        isUp = true;\
        isDown = false;\
\
        nowImg = imgNumArr[hashRandFunc(imgCnt)];\
        imgCnt++;\
\
        if (imgCnt > 20000)\
        \{\
          imgCnt = 0;\
        \}\
      \}\
    \}\
  \} \
  else\
  \{\
    isTimeChecked = false;\
\
    if (!isTimeChecked2)\
    \{\
      time2 = 0;\
      isTimeChecked2 = true;\
	time = 0;\
    \}\
    time2++;\
    if (time2 > WAIT_TIME - 15)\
    \{\
      if (!isDown)\
      \{\
        isUp = false;\
        isDown = true;\
        nowImg = 0;\
      \}\
    \}\
  \}\
  //println("imgcnt : " + imgCnt);\
  imgArr[nowImg].showImage(nowImg);\
\}\
\
void dataInit()\
\{\
  ch = 0;\
  hashNum = 12345;\
  imgCnt = 0;\
  nowImg = 0;\
  isUp = false;\
  isDown = true;\
  time = 0;\
  isTimeChecked = false;\
  isTimeChecked2 = true;\
\}\
\
void serialInit()\
\{\
  bt1 = new Serial(this, "/dev/cu.HC-06-DevB", 9600);\
  bt2 = new Serial(this, "/dev/cu.HC-06-DevB-1", 9600);\
\
  bt1.bufferUntil('\\n');\
  bt2.bufferUntil('\\n');\
\}\
\
void serialEvent(Serial s)\
\{\
  String inStrBt = bt2.readStringUntil('\\n');\
  //println(inStrBt);\
  \
  //int ib = int(inStrBt);\
  //ib = int(map(ib, 0, 300, 0, 255));\
  //println(ib);\
  \
\
  if (inStrBt != null)\
  \{\
    int l = inStrBt.length();\
\
    if (l > 4)\
    \{\
      ch = inStrBt.charAt(0);\
    \}\
    else\
    \{\
      ch = '0';\
    \}\
    println(ch);\
    bt1.write(ch);\
    ch -= '0';\
  \}\
\}\
\
void pathInit()\
\{\
  path = new String[4];\
  path[0] = "/Users/kimhyeju/Desktop/ProcessingData/0.jpg";\
  path[1] = "/Users/kimhyeju/Desktop/ProcessingData/1.jpg";\
  path[2] = "/Users/kimhyeju/Desktop/ProcessingData/2.jpg";\
  path[3] = "/Users/kimhyeju/Desktop/ProcessingData/3.jpg";\
\}\
\
void imgInit()\
\{\
  imgArr = new Img[4];\
\
  for (int i = 0; i < imgArr.length; i++)\
  \{\
    imgArr[i] =\
      new Img(loadImage(path[i]), path[i], false);\
  \}\
\}\
\
void numArrInit()\
\{\
  imgNumArr = new int[6];\
  imgNumArr[0] = 1;\
  imgNumArr[1] = 2;\
  imgNumArr[2] = 3;\
  imgNumArr[3] = 1;\
  imgNumArr[4] = 2;\
  imgNumArr[5] = 3;\
\}\
\
int hashRandFunc(int count)\
\{\
  hashNum += ((count * 223 + 2) / (double)12 + 97);\
  if (hashNum > 1000000000) hashNum = 12352;\
\
  return int (hashNum % 6);\
\}\
}